{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/directives/for.js","../src/directives/bind.js","../src/directives/show.js","../src/directives/if.js","../src/directives/on.js","../src/directives/model.js","../src/component.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function arrayUnique(array) {\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function walk(el, callback) {\n    if (callback(el) === false) return\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walk(node, callback)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait) {\n    var timeout\n    return function () {\n        var context = this, args = arguments\n        var later = function () {\n            timeout = null\n            func.apply(context, args)\n        }\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n    }\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/\n\n    return xAttrRE.test(name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/)\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypassfilter\n            if (! type) return true\n\n            return i.type === type\n        })\n}\n\nexport function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n        return name.replace('@', 'x-on:')\n    } else if (name.startsWith(':')) {\n        return name.replace(':', 'x-bind:')\n    }\n\n    return name\n}\n\nexport function transitionIn(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\n}\n\nexport function transitionOut(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\n}\n\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    const originalClasses = el.__x_original_classes || []\n    el.classList.add(...classesStart)\n    el.classList.add(...classesDuring)\n\n    requestAnimationFrame(() => {\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\n\n        hook1()\n\n        requestAnimationFrame(() => {\n            // Don't remove classes that were in the original class attribute.\n            el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)))\n            el.classList.add(...classesEnd)\n\n            setTimeout(() => {\n                hook2()\n\n                // Adding an \"isConnected\" check, in case the callback\n                // removed the element from the DOM.\n                if (el.isConnected) {\n                    el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)))\n                    el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)))\n                }\n            }, duration);\n        })\n    });\n}\n","import { transitionIn, transitionOut, getXAttrs } from '../utils'\n\nexport function handleForDirective(component, el, expression, initialUpdate) {\n    const { single, bunch, iterator1, iterator2 } = parseFor(expression)\n\n    var items = component.evaluateReturnExpression(el, bunch)\n\n    // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n    var previousEl = el\n    items.forEach((i, index, group) => {\n        const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group)\n        let currentEl = previousEl.nextElementSibling\n\n        // Let's check and see if the x-for has already generated an element last time it ran.\n        if (currentEl && currentEl.__x_for_key !== undefined) {\n            // If the the key's don't match.\n            if (currentEl.__x_for_key !== currentKey) {\n                // We'll look ahead to see if we can find it further down.\n                var tmpCurrentEl = currentEl\n                while(tmpCurrentEl) {\n                    // If we found it later in the DOM.\n                    if (tmpCurrentEl.__x_for_key === currentKey) {\n                        // Move it to where it's supposed to be in the DOM.\n                        el.parentElement.insertBefore(tmpCurrentEl, currentEl)\n                        // And set it as the current element as if we just created it.\n                        currentEl = tmpCurrentEl\n                        break\n                    }\n\n                    tmpCurrentEl = (tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined) ? tmpCurrentEl.nextElementSibling : false\n                }\n            }\n\n            // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\n            delete currentEl.__x_for_key\n\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            component.updateElements(currentEl, () => {\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\n            })\n        } else {\n            // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\n            // extra items in the array that need to be added as new elements.\n\n            // Let's create a clone from the template.\n            const clone = document.importNode(el.content, true);\n            // Insert it where we are in the DOM.\n            el.parentElement.insertBefore(clone, currentEl)\n\n            // Set it as the current element.\n            currentEl = previousEl.nextElementSibling\n\n            // And transition it in if it's not the first page load.\n            transitionIn(currentEl, () => {}, initialUpdate)\n\n            // Now, let's walk the new DOM node and initialize everything,\n            // including new nested components.\n            // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\n            // always up to date for listener handlers that don't get re-registered.\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            component.initializeElements(currentEl, () => {\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\n            })\n        }\n\n        currentEl.__x_for_key = currentKey\n\n        previousEl = currentEl\n    })\n\n    // Now that we've added/updated/moved all the elements for the current state of the loop.\n    // Anything left over, we can get rid of.\n    var nextElementFromOldLoop = (previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined) ? previousEl.nextElementSibling : false\n\n    while(nextElementFromOldLoop) {\n        const nextElementFromOldLoopImmutable = nextElementFromOldLoop\n        const nextSibling = nextElementFromOldLoop.nextElementSibling\n\n        transitionOut(nextElementFromOldLoop, () => {\n            nextElementFromOldLoopImmutable.remove()\n        })\n\n        nextElementFromOldLoop = (nextSibling && nextSibling.__x_for_key !== undefined) ? nextSibling : false\n    }\n}\n\n// This was taken from VueJS 2.* core. Thanks Vue!\nfunction parseFor (expression) {\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\n    const stripParensRE = /^\\(|\\)$/g\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\n\n    const inMatch = expression.match(forAliasRE)\n    if (! inMatch) return\n    const res = {}\n    res.bunch = inMatch[2].trim()\n    const single = inMatch[1].trim().replace(stripParensRE, '')\n    const iteratorMatch = single.match(forIteratorRE)\n    if (iteratorMatch) {\n        res.single = single.replace(forIteratorRE, '').trim()\n        res.iterator1 = iteratorMatch[1].trim()\n        if (iteratorMatch[2]) {\n            res.iterator2 = iteratorMatch[2].trim()\n        }\n    } else {\n        res.single = single\n    }\n    return res\n  }\n\nfunction getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0]\n\n    let keyAliases = { [single]: i }\n    if (iterator1) keyAliases[iterator1] = index\n    if (iterator2) keyAliases[iterator2] = group\n\n    return keyAttr\n        ? component.evaluateReturnExpression(el, keyAttr.expression, () => keyAliases)\n        : index\n}\n","import { arrayUnique } from '../utils'\n\nexport function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars)\n\n    if (attrName === 'value') {\n        // If nested model key is undefined, set the default value to empty string.\n        if (value === undefined && expression.match(/\\./).length) {\n            value = ''\n        }\n\n        if (el.type === 'radio') {\n            el.checked = el.value == value\n        } else if (el.type === 'checkbox') {\n            if (Array.isArray(value)) {\n                // I'm purposely not using Array.includes here because it's\n                // strict, and because of Numeric/String mis-casting, I\n                // want the \"includes\" to be \"fuzzy\".\n                let valueFound = false\n                value.forEach(val => {\n                    if (val == el.value) {\n                        valueFound = true\n                    }\n                })\n\n                el.checked = valueFound\n            } else {\n                el.checked = !! value\n            }\n        } else if (el.tagName === 'SELECT') {\n            updateSelect(el, value)\n        } else {\n            el.value = value\n        }\n    } else if (attrName === 'class') {\n        if (Array.isArray(value)) {\n            const originalClasses = el.__x_original_classes || []\n            el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\n        } else if (typeof value === 'object') {\n            Object.keys(value).forEach(classNames => {\n                if (value[classNames]) {\n                    classNames.split(' ').forEach(className => el.classList.add(className))\n                } else {\n                    classNames.split(' ').forEach(className => el.classList.remove(className))\n                }\n            })\n        } else {\n            const originalClasses = el.__x_original_classes || []\n            const newClasses = value.split(' ')\n            el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\n        }\n    } else if (['disabled', 'readonly', 'required', 'checked', 'hidden', 'selected'].includes(attrName)) {\n        // Boolean attributes have to be explicitly added and removed, not just set.\n        if (!! value) {\n            el.setAttribute(attrName, '')\n        } else {\n            el.removeAttribute(attrName)\n        }\n    } else {\n        el.setAttribute(attrName, value)\n    }\n}\n\nfunction updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n    Array.from(el.options).forEach(option => {\n        option.selected = arrayWrappedValue.includes(option.value || option.text)\n    })\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleShowDirective(el, value, initialUpdate = false) {\n    if (! value) {\n        transitionOut(el, () => {\n            el.style.display = 'none'\n        }, initialUpdate)\n    } else {\n        transitionIn(el, () => {\n            if (el.style.length === 1 && el.style.display !== '') {\n                el.removeAttribute('style')\n            } else {\n                el.style.removeProperty('display')\n            }\n        }, initialUpdate)\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleIfDirective(el, expressionResult, initialUpdate) {\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#x-if`)\n\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n    if (expressionResult && ! elementHasAlreadyBeenAdded) {\n        const clone = document.importNode(el.content, true);\n\n        el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n        el.nextElementSibling.__x_inserted_me = true\n\n        transitionIn(el.nextElementSibling, () => {}, initialUpdate)\n    } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n        transitionOut(el.nextElementSibling, () => {\n            el.nextElementSibling.remove()\n        }, initialUpdate)\n    }\n}\n","import { kebabCase } from '../utils'\n\nexport function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    if (modifiers.includes('away')) {\n        const handler = e => {\n            // Don't do anything if the click came form the element or within it.\n            if (el.contains(e.target)) return\n\n            // Don't do anything if this element isn't currently visible.\n            if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n            // Now that we are sure the element is visible, AND the click\n            // is from outside it, let's run the expression.\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                document.removeEventListener(event, handler)\n            }\n        }\n\n        // Listen for this event at the root level.\n        document.addEventListener(event, handler)\n    } else {\n        const listenerTarget = modifiers.includes('window')\n            ? window : (modifiers.includes('document') ? document : el)\n\n        const handler = e => {\n            if (isKeyEvent(event)) {\n                if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n                    return\n                }\n            }\n\n            if (modifiers.includes('prevent')) e.preventDefault()\n            if (modifiers.includes('stop')) e.stopPropagation()\n\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler)\n            }\n        }\n\n        listenerTarget.addEventListener(event, handler)\n    }\n}\n\nfunction runListenerHandler(component, expression, e, extraVars) {\n    component.evaluateCommandExpression(e.target, expression, () => {\n        return {...extraVars(), '$event': e}\n    })\n}\n\nfunction isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event)\n}\n\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n        return ! ['window', 'document', 'prevent', 'stop'].includes(i)\n    })\n\n    // If no modifier is specified, we'll call it a press.\n    if (keyModifiers.length === 0) return false\n\n    // If one is passed, AND it matches the key pressed, we'll call it a press.\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false\n\n    // The user is listening for key combinations.\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\n\n    keyModifiers = keyModifiers.filter(i => ! selectedSystemKeyModifiers.includes(i))\n\n    if (selectedSystemKeyModifiers.length > 0) {\n        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n            // Alias \"cmd\" and \"super\" to \"meta\"\n            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\n\n            return e[`${modifier}Key`]\n        })\n\n        // If all the modifiers selected are pressed, ...\n        if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n            // AND the remaining key is pressed as well. It's a press.\n            if (keyModifiers[0] === keyToModifier(e.key)) return false\n        }\n    }\n\n    // We'll call it NOT a valid keypress.\n    return true\n}\n\nfunction keyToModifier(key) {\n    switch (key) {\n        case '/':\n            return 'slash'\n        case ' ':\n        case 'Spacebar':\n            return 'space'\n        default:\n            return kebabCase(key)\n    }\n}\n","import { registerListener } from './on'\n\nexport function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = (el.tagName.toLowerCase() === 'select')\n        || ['checkbox', 'radio'].includes(el.type)\n        || modifiers.includes('lazy')\n        ? 'change' : 'input'\n\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`\n\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n        return {\n            ...extraVars(),\n            rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression),\n        }\n    })\n}\n\nfunction generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n        // Radio buttons only work properly when they share a name attribute.\n        // People might assume we take care of that for them, because\n        // they already set a shared \"x-model\" attribute.\n        if (! el.hasAttribute('name')) el.setAttribute('name', expression)\n    }\n\n    return (event, currentValue) => {\n        if (event instanceof CustomEvent) {\n            return event.detail\n        } else if (el.type === 'checkbox') {\n            // If the data we are binding to is an array, toggle it's value inside the array.\n            if (Array.isArray(currentValue)) {\n                return event.target.checked ? currentValue.concat([event.target.value]) : currentValue.filter(i => i !== event.target.value)\n            } else {\n                return event.target.checked\n            }\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n            return modifiers.includes('number')\n                ? Array.from(event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })\n                : Array.from(event.target.selectedOptions).map(option => { return option.value || option.text })\n        } else {\n            return modifiers.includes('number')\n                ? parseFloat(event.target.value)\n                : (modifiers.includes('trim') ? event.target.value.trim() : event.target.value)\n        }\n    }\n}\n","import { walk, saferEval, saferEvalNoReturn, getXAttrs, debounce } from './utils'\nimport { handleForDirective } from './directives/for'\nimport { handleAttributeBindingDirective } from './directives/bind'\nimport { handleShowDirective } from './directives/show'\nimport { handleIfDirective } from './directives/if'\nimport { registerModelListener } from './directives/model'\nimport { registerListener } from './directives/on'\n\nexport default class Component {\n    constructor(el) {\n        this.$el = el\n\n        const dataAttr = this.$el.getAttribute('x-data')\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\n        const initExpression = this.$el.getAttribute('x-init')\n        const createdExpression = this.$el.getAttribute('x-created')\n        const mountedExpression = this.$el.getAttribute('x-mounted')\n\n        const unobservedData = saferEval(dataExpression, {})\n\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\n        this.$data = this.wrapDataInObservable(unobservedData)\n\n        // After making user-supplied data methods reactive, we can now add\n        // our magic properties to the original data for access.\n        unobservedData.$el = this.$el\n        unobservedData.$refs = this.getRefsProxy()\n\n        this.nextTickStack = []\n        unobservedData.$nextTick = (callback) => {\n            this.nextTickStack.push(callback)\n        }\n\n        var initReturnedCallback\n        if (initExpression) {\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n            this.pauseReactivity = true\n            initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression)\n            this.pauseReactivity = false\n        }\n\n        if (createdExpression) {\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\n            this.pauseReactivity = true\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        // Register all our listeners and set all our attribute bindings.\n        this.initializeElements(this.$el)\n\n        // Use mutation observer to detect new elements being added within this component at run-time.\n        // Alpine's just so darn flexible amirite?\n        this.listenForNewElementsToInitialize()\n\n        if (typeof initReturnedCallback === 'function') {\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            initReturnedCallback.call(this.$data)\n        }\n\n        if (mountedExpression) {\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            saferEvalNoReturn(mountedExpression, this.$data)\n        }\n    }\n\n    wrapDataInObservable(data) {\n        var self = this\n\n        const proxyHandler = {\n            set(obj, property, value) {\n                // If value is an Alpine proxy (i.e. an element returned when sorting a list of objects),\n                // we want to set the original element to avoid a matryoshka effect (nested proxies).\n                const setWasSuccessful = value['$isAlpineProxy']\n                    ? Reflect.set(obj, property, value['$originalTarget'])\n                    : Reflect.set(obj, property, value)\n\n                // Don't react to data changes for cases like the `x-created` hook.\n                if (self.pauseReactivity) return setWasSuccessful\n\n                debounce(() => {\n                    self.updateElements(self.$el)\n\n                    // Walk through the $nextTick stack and clear it as we go.\n                    while (self.nextTickStack.length > 0) {\n                        self.nextTickStack.shift()()\n                    }\n                }, 0)()\n\n                return setWasSuccessful\n            },\n            get(target, key) {\n                // Provide a way to determine if this object is an Alpine proxy or not.\n                if (key === \"$isAlpineProxy\") return true\n\n                // Provide a hook to access the underlying \"proxied\" data directly.\n                if (key === \"$originalTarget\") return target\n\n                // If the property we are trying to get is a proxy, just return it.\n                // Like in the case of $refs\n                if (target[key] && target[key].$isRefsProxy) return target[key]\n\n                // If property is a DOM node, just return it. (like in the case of this.$el)\n                if (target[key] && target[key] instanceof Node) return target[key]\n\n                // If accessing a nested property, return this proxy recursively.\n                // This enables reactivity on setting nested data.\n                if (typeof target[key] === 'object' && target[key] !== null) {\n                    return new Proxy(target[key], proxyHandler)\n                }\n\n                // If none of the above, just return the flippin' value. Gawsh.\n                return target[key]\n            }\n        }\n\n        return new Proxy(data, proxyHandler)\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n        walk(el, el => {\n            // We've hit a component.\n            if (el.hasAttribute('x-data')) {\n                // If it's not the current one.\n                if (! el.isSameNode(this.$el)) {\n                    // Initialize it if it's not.\n                    if (! el.__x) initializeComponentCallback(el)\n\n                    // Now we'll let that sub-component deal with itself.\n                    return false\n                }\n            }\n\n            return callback(el)\n        })\n    }\n\n    initializeElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop\n            if (el.__x_for_key !== undefined) return false\n\n            this.initializeElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n\n        // Walk through the $nextTick stack and clear it as we go.\n        while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()()\n        }\n    }\n\n    initializeElement(el, extraVars) {\n        // To support class attribute merging, we have to know what the element's\n        // original class attribute looked like for reference.\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\n            el.__x_original_classes = el.getAttribute('class').split(' ')\n        }\n\n        this.registerListeners(el, extraVars)\n        this.resolveBoundAttributes(el, true, extraVars)\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n            if (el.__x_for_key !== undefined && ! el.isSameNode(this.$el)) return false\n\n            this.updateElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n    }\n\n    updateElement(el, extraVars) {\n        this.resolveBoundAttributes(el, false, extraVars)\n    }\n\n    registerListeners(el, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    registerListener(this, el, value, modifiers, expression, extraVars)\n                    break;\n\n                case 'model':\n                    registerModelListener(this, el, modifiers, expression, extraVars)\n                    break;\n                default:\n                    break;\n            }\n        })\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'model':\n                    handleAttributeBindingDirective(this, el, 'value', expression, extraVars)\n                    break;\n\n                case 'bind':\n                    // The :key binding on an x-for is special, ignore it.\n                    if (el.tagName.toLowerCase() === 'template' && value === 'key') return\n\n                    handleAttributeBindingDirective(this, el, value, expression, extraVars)\n                    break;\n\n                case 'text':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars);\n\n                    // If nested model key is undefined, set the default value to empty string.\n                    if (output === undefined && expression.match(/\\./).length) {\n                        output = ''\n                    }\n\n                    el.innerText = output\n                    break;\n\n                case 'html':\n                    el.innerHTML = this.evaluateReturnExpression(el, expression, extraVars)\n                    break;\n\n                case 'show':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleShowDirective(el, output, initialUpdate)\n                    break;\n\n                case 'if':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleIfDirective(el, output, initialUpdate)\n                    break;\n\n                case 'for':\n                    handleForDirective(this, el, expression, initialUpdate)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n        return saferEval(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n        saferEvalNoReturn(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    getDispatchFunction (el) {\n        return (event, detail = {}) => {\n            el.dispatchEvent(new CustomEvent(event, {\n                detail,\n                bubbles: true,\n            }))\n        }\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.$el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                const closestParentComponent = mutations[i].target.closest('[x-data]')\n                if (! (closestParentComponent && closestParentComponent.isSameNode(this.$el))) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.$data[key] !== rawData[key]) {\n                            this.$data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) {\n                            node.__x = new Component(node)\n                            return\n                        }\n\n                        this.initializeElements(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy({}, {\n            get(object, property) {\n                if (property === '$isRefsProxy') return true\n\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                self.walkAndSkipNestedComponents(self.$el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationOberserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback, el = null) {\n        const rootEls = (el || document).querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        // Discard non-element nodes (like line-breaks)\n                        if (node.nodeType !== 1) return\n\n                        // Discard any changes happening within an existing component.\n                        // They will take care of themselves.\n                        if (node.parentElement && node.parentElement.closest('[x-data]')) return\n\n                        this.discoverUninitializedComponents((el) => {\n                            this.initializeComponent(el)\n                        }, node.parentElement)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        if (! el.__x) {\n            el.__x = new Component(el)\n        }\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","walk","el","callback","node","firstElementChild","nextElementSibling","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","forceSkip","attrs","enter","find","split","enterStart","enterEnd","transition","transitionOut","leave","leaveStart","leaveEnd","classesDuring","classesStart","classesEnd","hook1","hook2","originalClasses","__x_original_classes","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","handleForDirective","component","initialUpdate","forIteratorRE","inMatch","res","bunch","trim","single","iteratorMatch","iterator1","iterator2","parseFor","items","evaluateReturnExpression","previousEl","forEach","index","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","undefined","__x_for_key","tmpCurrentEl","parentElement","insertBefore","__x_for_alias","__x_for_value","updateElements","clone","document","importNode","content","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","handleAttributeBindingDirective","attrName","extraVars","checked","isArray","valueFound","val","tagName","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","join","_typeof","classNames","className","newClasses","removeAttribute","handleShowDirective","style","display","removeProperty","handleIfDirective","expressionResult","nodeName","toLowerCase","console","warn","elementHasAlreadyBeenAdded","__x_inserted_me","registerListener","event","handler","e","contains","target","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","isKeyEvent","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","evaluateCommandExpression","keyModifiers","keyToModifier","key","selectedSystemKeyModifiers","modifier","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","multiple","selectedOptions","parseFloat","Component","$el","initReturnedCallback","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","$data","wrapDataInObservable","$refs","getRefsProxy","nextTickStack","$nextTick","_this","push","pauseReactivity","listenForNewElementsToInitialize","call","data","self","proxyHandler","set","obj","property","func","wait","timeout","setWasSuccessful","Reflect","shift","context","args","arguments","later","apply","clearTimeout","get","$isRefsProxy","Node","Proxy","initializeComponentCallback","isSameNode","_this2","__x","rootEl","walkAndSkipNestedComponents","_this3","initializeElement","registerListeners","resolveBoundAttributes","_this4","updateElement","_this5","listenerExpression","rightSideOfExpression","registerModelListener","_this6","output","innerText","innerHTML","$dispatch","getDispatchFunction","dispatchEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","_this7","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","object","ref","Alpine","start","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector"],"mappings":"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"}